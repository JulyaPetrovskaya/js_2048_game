{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","scoreDisplay","loseMessage","winMessage","startMessage","cells","querySelectorAll","cellsData","isGameOver","score","i","push","value","addNewNumber","emptyCells","filter","cell","length","Math","floor","random","textContent","updateCells","forEach","index","cellValue","classList","remove","add","resetGame","checkWin","some","checkGameOver","mergeCells","row","arr","num","splice","moveCellsLeft","hasChanged","j","merged","join","updateData","moveCellsRight","moveCellsUp","column","updateScore","gameOver","moveCellsDown","isWin","addEventListener","eventKey","key"],"mappings":"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","file":"main.4a7306a1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst scoreDisplay = document.querySelector('.game-score');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst cells = document.querySelectorAll('.field-cell');\n\nconst cellsData = [];\nlet isGameOver = false;\nlet score = 0;\n\nfor (let i = 0; i < 16; i++) {\n  cellsData.push({ value: 0 });\n}\n\nfunction addNewNumber() {\n  const emptyCells = cellsData.filter((cell) => cell.value === 0);\n\n  if (emptyCells.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const randomCell = emptyCells[randomIndex];\n\n    randomCell.value = Math.random() < 0.9 ? 2 : 4;\n\n    scoreDisplay.textContent = score;\n\n    updateCells();\n  }\n}\n\nfunction updateCells() {\n  cells.forEach((cell, index) => {\n    const cellValue = cellsData[index].value;\n\n    if (cellValue !== 0) {\n      cell.textContent = cellValue;\n\n      cell.classList.remove(\n        'field-cell--2',\n        'field-cell--4',\n        'field-cell--8',\n        'field-cell--16',\n        'field-cell--32',\n        'field-cell--64',\n        'field-cell--128',\n        'field-cell--256',\n        'field-cell--512',\n        'field-cell--1024',\n        'field-cell--2048'\n      );\n      cell.classList.add(`field-cell--${cellValue}`);\n    } else {\n      cell.textContent = '';\n\n      cell.classList.remove(\n        'field-cell--2',\n        'field-cell--4',\n        'field-cell--8',\n        'field-cell--16',\n        'field-cell--32',\n        'field-cell--64',\n        'field-cell--128',\n        'field-cell--256',\n        'field-cell--512',\n        'field-cell--1024',\n        'field-cell--2048'\n      );\n    }\n  });\n}\n\nstartButton.addEventListener('click', () => {\n  resetGame();\n  addNewNumber();\n  startButton.textContent = 'Restart';\n  startButton.classList.add('restart');\n  startMessage.classList.add('hidden');\n});\n\nfunction resetGame() {\n  score = 0;\n\n  cellsData.forEach((cell) => {\n    cell.value = 0;\n  });\n\n  isGameOver = false;\n\n  scoreDisplay.textContent = '0';\n  loseMessage.classList.remove('show');\n  winMessage.classList.remove('show');\n\n  cells.forEach((cell) => {\n    cell.textContent = '';\n\n    cell.classList.remove(\n      'field-cell--2',\n      'field-cell--4',\n      'field-cell--8',\n      'field-cell--16',\n      'field-cell--32',\n      'field-cell--64',\n      'field-cell--128',\n      'field-cell--256',\n      'field-cell--512',\n      'field-cell--1024',\n      'field-cell--2048'\n    );\n  });\n\n  addNewNumber();\n}\n\nfunction checkWin() {\n  return cellsData.some(cell => cell.value === 2048);\n}\n\nfunction checkGameOver() {\n  const emptyCells = cellsData.filter(cell => cell.value === 0);\n\n  if (emptyCells.length === 0) {\n    for (let i = 0; i < cellsData.length; i++) {\n      const cell = cellsData[i];\n\n      if (i % 4 !== 3 && cell.value === cellsData[i + 1].value) {\n        return false;\n      }\n\n      if (i < 12 && cell.value === cellsData[i + 4].value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\ndocument.addEventListener('keydown', (eventKey) => {\n  if (!isGameOver) {\n    if (eventKey.key === 'ArrowLeft') {\n      moveCellsLeft();\n    } else if (eventKey.key === 'ArrowUp') {\n      moveCellsUp();\n    } else if (eventKey.key === 'ArrowRight') {\n      moveCellsRight();\n    } else if (eventKey.key === 'ArrowDown') {\n      moveCellsDown();\n    }\n  }\n});\n\nfunction mergeCells(row) {\n  const arr = row.filter(num => num);\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      arr[i] *= 2;\n      score += arr[i];\n      arr.splice(i + 1, 1);\n    }\n  }\n\n  while (arr.length < 4) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n\nfunction moveCellsLeft() {\n  let hasChanged = false;\n\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 0; j < 4; j++) {\n      row.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(row);\n\n    for (let j = 0; j < 4; j++) {\n      cellsData[i * 4 + j].value = merged[j];\n    }\n\n    if (!hasChanged && merged.join() !== row.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction moveCellsRight() {\n  let hasChanged = false;\n\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 3; j >= 0; j--) {\n      row.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(row);\n\n    for (let j = 3; j >= 0; j--) {\n      cellsData[i * 4 + j].value = merged[3 - j];\n    }\n\n    if (!hasChanged && merged.join() !== row.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction moveCellsUp() {\n  let hasChanged = false;\n\n  for (let j = 0; j < 4; j++) {\n    const column = [];\n\n    for (let i = 0; i < 4; i++) {\n      column.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(column);\n\n    for (let i = 0; i < 4; i++) {\n      cellsData[i * 4 + j].value = merged[i];\n    }\n\n    if (!hasChanged && merged.join() !== column.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction updateData() {\n  addNewNumber();\n  updateCells();\n  updateScore();\n\n  if (checkGameOver()) {\n    gameOver(false);\n  }\n\n  if (checkWin()) {\n    gameOver(true);\n  }\n}\n\nfunction moveCellsDown() {\n  let hasChanged = false;\n\n  for (let j = 0; j < 4; j++) {\n    const column = [];\n\n    for (let i = 3; i >= 0; i--) {\n      column.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(column);\n\n    for (let i = 3; i >= 0; i--) {\n      cellsData[i * 4 + j].value = merged[3 - i];\n    }\n\n    if (!hasChanged && merged.join() !== column.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction updateScore() {\n  scoreDisplay.textContent = score;\n}\n\nfunction gameOver(isWin) {\n  if (isWin) {\n    winMessage.classList.add('show');\n  } else {\n    isGameOver = true;\n    loseMessage.classList.add('show');\n  }\n}\n"]}